name: Test warehouse platform
on:
  workflow_dispatch:
    inputs:
      warehouse-type:
        type: choice
        required: true
        description: The type of the warehouse platform.
        options:
          - snowflake
          - bigquery
          - redshift
          - databricks
      elementary-ref:
        type: string
        required: false
        description: The branch or tag ref to checkout for the 'elementary' repository.
      dbt-data-reliability-ref:
        type: string
        required: false
        description: The branch or tag ref to checkout for the 'dbt-data-reliability' repository.

  workflow_call:
    inputs:
      warehouse-type:
        type: string
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    concurrency:
      group: tests-${{ inputs.warehouse-type }}-${{ github.ref_name }}
    steps:
      - name: Write dbt profiles
        run: |
          mkdir -p ~/.dbt
          echo "${{ secrets.CI_PROFILES_YML }}" | base64 -d > ~/.dbt/profiles.yml

      - name: Checkout Elementary
        uses: actions/checkout@v3
        with:
          path: elementary
          ref: ${{ inputs.elementary-ref }}

      - name: Checkout dbt package
        uses: actions/checkout@v3
        with:
          repository: elementary-data/dbt-data-reliability
          path: dbt-data-reliability
          ref: ${{ inputs.dbt-data-reliability-ref }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7.5'

      - name: Install Elementary
        run: pip install './elementary[${{ inputs.warehouse-type }}]'

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: elementary/build

      - name: Run E2E tests
        env:
          CUSTOM_SCHEMA: ${{ github.ref_name }}
        run: |
          dbt deps --project-dir ./dbt-data-reliability/integration_tests
          python ./dbt-data-reliability/integration_tests/run_e2e_tests.py -t ${{ inputs.warehouse-type }}

      - name: Run help
        run: edr --help

      - name: Run monitor
        run: edr monitor -t ${{ inputs.warehouse-type }} --slack-webhook ${{ secrets.CI_SLACK_WEBHOOK }}

      - name: Run report
        run: edr monitor report -t ${{ inputs.warehouse-type }} --file-path report.html

      - name: Upload report artifact
        uses: actions/upload-artifact@v3
        with:
          name: report_${{ inputs.warehouse-type }}_${{ github.ref_name }}.html
          path: report.html

      - name: Write GCS keyfile
        run: echo "${{ secrets.GCS_KEYFILE }}" | base64 -d > /tmp/gcs_keyfile.json

      - name: Run send report
        run: >
          edr monitor send-report -t ${{ inputs.warehouse-type }} --file-name report_${{ inputs.warehouse-type }}_${{ github.ref_name }}.html
          --slack-token ${{ secrets.CI_SLACK_TOKEN }} --slack-channel-name data-ops
          --aws-access-key-id ${{ secrets.AWS_ACCESS_KEY_ID }} --aws-secret-access-key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --s3-bucket-name elementary-ci-artifacts
          --google-service-account-path /tmp/gcs_keyfile.json --gcs-bucket-name elementary_ci_artifacts
          --update-bucket-website true
