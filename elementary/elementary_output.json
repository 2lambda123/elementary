{"creation_time": "2022-09-20 10:50:23", "models": {"model.elementary_integration_tests.error_model": {"name": "error_model", "unique_id": "model.elementary_integration_tests.error_model", "owners": [], "tags": ["error_model"], "package_name": "elementary_integration_tests", "description": "We use this model to create error runs and tests", "full_path": "models/error_model.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "error_model", "model_name": "error_model", "normalized_full_path": "elementary_integration_tests/models/error_model.sql"}, "model.elementary_integration_tests.any_type_column_anomalies": {"name": "any_type_column_anomalies", "unique_id": "model.elementary_integration_tests.any_type_column_anomalies", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "This is a very weird description with breaklines and comma, and even a string like this 'wow'. You know, these $##$34#@#!^ can also be helpful WDYT?\n", "full_path": "models/any_type_column_anomalies.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "any_type_column_anomalies", "model_name": "any_type_column_anomalies", "normalized_full_path": "elementary_integration_tests/models/any_type_column_anomalies.sql"}, "model.elementary_integration_tests.numeric_column_anomalies": {"name": "numeric_column_anomalies", "unique_id": "model.elementary_integration_tests.numeric_column_anomalies", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "", "full_path": "models/numeric_column_anomalies.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "numeric_column_anomalies", "model_name": "numeric_column_anomalies", "normalized_full_path": "elementary_integration_tests/models/numeric_column_anomalies.sql"}, "model.elementary_integration_tests.string_column_anomalies": {"name": "string_column_anomalies", "unique_id": "model.elementary_integration_tests.string_column_anomalies", "owners": ["@or"], "tags": ["marketing"], "package_name": "elementary_integration_tests", "description": "", "full_path": "models/string_column_anomalies.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "string_column_anomalies", "model_name": "string_column_anomalies", "normalized_full_path": "elementary_integration_tests/models/string_column_anomalies.sql"}, "model.elementary_integration_tests.no_timestamp_anomalies": {"name": "no_timestamp_anomalies", "unique_id": "model.elementary_integration_tests.no_timestamp_anomalies", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "We use this model to test anomalies when there is no timestamp column", "full_path": "models/no_timestamp_anomalies.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "no_timestamp_anomalies", "model_name": "no_timestamp_anomalies", "normalized_full_path": "elementary_integration_tests/models/no_timestamp_anomalies.sql"}, "model.elementary_integration_tests.dimension_anomalies": {"name": "dimension_anomalies", "unique_id": "model.elementary_integration_tests.dimension_anomalies", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "We use this model to test dimension anomalies", "full_path": "models/dimension_anomalies.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "dimension_anomalies", "model_name": "dimension_anomalies", "normalized_full_path": "elementary_integration_tests/models/dimension_anomalies.sql"}, "model.elementary.current_tests_run_results": {"name": "current_tests_run_results", "unique_id": "model.elementary.current_tests_run_results", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/run_results/current_tests_run_results.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "current_tests_run_results", "model_name": "current_tests_run_results", "normalized_full_path": "elementary/models/edr/run_results/current_tests_run_results.sql"}, "model.elementary.dbt_tests": {"name": "dbt_tests", "unique_id": "model.elementary.dbt_tests", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/dbt_artifacts/dbt_tests.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "dbt_tests", "model_name": "dbt_tests", "normalized_full_path": "elementary/models/edr/dbt_artifacts/dbt_tests.sql"}, "model.elementary.alerts_anomaly_detection": {"name": "alerts_anomaly_detection", "unique_id": "model.elementary.alerts_anomaly_detection", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/data_monitoring/anomaly_detection/alerts_anomaly_detection.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "alerts_anomaly_detection", "model_name": "alerts_anomaly_detection", "normalized_full_path": "elementary/models/edr/data_monitoring/anomaly_detection/alerts_anomaly_detection.sql"}, "model.elementary.alerts_dbt_tests": {"name": "alerts_dbt_tests", "unique_id": "model.elementary.alerts_dbt_tests", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/data_monitoring/data_monitoring/alerts_dbt_tests.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "alerts_dbt_tests", "model_name": "alerts_dbt_tests", "normalized_full_path": "elementary/models/edr/data_monitoring/data_monitoring/alerts_dbt_tests.sql"}, "model.elementary.alerts_schema_changes": {"name": "alerts_schema_changes", "unique_id": "model.elementary.alerts_schema_changes", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/data_monitoring/schema_changes/alerts_schema_changes.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "alerts_schema_changes", "model_name": "alerts_schema_changes", "normalized_full_path": "elementary/models/edr/data_monitoring/schema_changes/alerts_schema_changes.sql"}, "model.elementary.elementary_test_results": {"name": "elementary_test_results", "unique_id": "model.elementary.elementary_test_results", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/run_results/elementary_test_results.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "elementary_test_results", "model_name": "elementary_test_results", "normalized_full_path": "elementary/models/edr/run_results/elementary_test_results.sql"}, "model.elementary.anomaly_threshold_sensitivity": {"name": "anomaly_threshold_sensitivity", "unique_id": "model.elementary.anomaly_threshold_sensitivity", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "anomaly_threshold_sensitivity", "model_name": "anomaly_threshold_sensitivity", "normalized_full_path": "elementary/models/edr/data_monitoring/anomaly_detection/anomaly_threshold_sensitivity.sql"}, "model.elementary.metrics_anomaly_score": {"name": "metrics_anomaly_score", "unique_id": "model.elementary.metrics_anomaly_score", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "metrics_anomaly_score", "model_name": "metrics_anomaly_score", "normalized_full_path": "elementary/models/edr/data_monitoring/anomaly_detection/metrics_anomaly_score.sql"}, "model.elementary.monitors_runs": {"name": "monitors_runs", "unique_id": "model.elementary.monitors_runs", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/system/monitors_runs.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "monitors_runs", "model_name": "monitors_runs", "normalized_full_path": "elementary/models/edr/system/monitors_runs.sql"}, "model.elementary.data_monitoring_metrics": {"name": "data_monitoring_metrics", "unique_id": "model.elementary.data_monitoring_metrics", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "data_monitoring_metrics", "model_name": "data_monitoring_metrics", "normalized_full_path": "elementary/models/edr/data_monitoring/data_monitoring/data_monitoring_metrics.sql"}, "model.elementary.schema_columns_snapshot": {"name": "schema_columns_snapshot", "unique_id": "model.elementary.schema_columns_snapshot", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/data_monitoring/schema_changes/schema_columns_snapshot.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "schema_columns_snapshot", "model_name": "schema_columns_snapshot", "normalized_full_path": "elementary/models/edr/data_monitoring/schema_changes/schema_columns_snapshot.sql"}, "model.elementary.dbt_exposures": {"name": "dbt_exposures", "unique_id": "model.elementary.dbt_exposures", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/dbt_artifacts/dbt_exposures.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "dbt_exposures", "model_name": "dbt_exposures", "normalized_full_path": "elementary/models/edr/dbt_artifacts/dbt_exposures.sql"}, "model.elementary.dbt_metrics": {"name": "dbt_metrics", "unique_id": "model.elementary.dbt_metrics", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/dbt_artifacts/dbt_metrics.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "dbt_metrics", "model_name": "dbt_metrics", "normalized_full_path": "elementary/models/edr/dbt_artifacts/dbt_metrics.sql"}, "model.elementary.alerts_dbt_models": {"name": "alerts_dbt_models", "unique_id": "model.elementary.alerts_dbt_models", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/alerts/alerts_dbt_models.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "alerts_dbt_models", "model_name": "alerts_dbt_models", "normalized_full_path": "elementary/models/edr/alerts/alerts_dbt_models.sql"}, "model.elementary.model_run_results": {"name": "model_run_results", "unique_id": "model.elementary.model_run_results", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/run_results/model_run_results.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "model_run_results", "model_name": "model_run_results", "normalized_full_path": "elementary/models/edr/run_results/model_run_results.sql"}, "model.elementary.dbt_models": {"name": "dbt_models", "unique_id": "model.elementary.dbt_models", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/dbt_artifacts/dbt_models.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "dbt_models", "model_name": "dbt_models", "normalized_full_path": "elementary/models/edr/dbt_artifacts/dbt_models.sql"}, "model.elementary.snapshot_run_results": {"name": "snapshot_run_results", "unique_id": "model.elementary.snapshot_run_results", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/run_results/snapshot_run_results.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "snapshot_run_results", "model_name": "snapshot_run_results", "normalized_full_path": "elementary/models/edr/run_results/snapshot_run_results.sql"}, "model.elementary.dbt_snapshots": {"name": "dbt_snapshots", "unique_id": "model.elementary.dbt_snapshots", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/dbt_artifacts/dbt_snapshots.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "dbt_snapshots", "model_name": "dbt_snapshots", "normalized_full_path": "elementary/models/edr/dbt_artifacts/dbt_snapshots.sql"}, "model.elementary.dbt_run_results": {"name": "dbt_run_results", "unique_id": "model.elementary.dbt_run_results", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/dbt_artifacts/dbt_run_results.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "dbt_run_results", "model_name": "dbt_run_results", "normalized_full_path": "elementary/models/edr/dbt_artifacts/dbt_run_results.sql"}, "model.elementary.dbt_sources": {"name": "dbt_sources", "unique_id": "model.elementary.dbt_sources", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/dbt_artifacts/dbt_sources.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "dbt_sources", "model_name": "dbt_sources", "normalized_full_path": "elementary/models/edr/dbt_artifacts/dbt_sources.sql"}, "model.elementary.filtered_information_schema_columns": {"name": "filtered_information_schema_columns", "unique_id": "model.elementary.filtered_information_schema_columns", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/metadata_store/filtered_information_schema_columns.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "filtered_information_schema_columns", "model_name": "filtered_information_schema_columns", "normalized_full_path": "elementary/models/edr/metadata_store/filtered_information_schema_columns.sql"}, "model.elementary.filtered_information_schema_tables": {"name": "filtered_information_schema_tables", "unique_id": "model.elementary.filtered_information_schema_tables", "owners": [], "tags": [], "package_name": "elementary", "description": "", "full_path": "models/edr/metadata_store/filtered_information_schema_tables.sql", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary_elementary", "table_name": "filtered_information_schema_tables", "model_name": "filtered_information_schema_tables", "normalized_full_path": "elementary/models/edr/metadata_store/filtered_information_schema_tables.sql"}, "source.elementary_integration_tests.validation.any_type_column_anomalies_validation": {"name": "any_type_column_anomalies_validation", "unique_id": "source.elementary_integration_tests.validation.any_type_column_anomalies_validation", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "", "full_path": "models/schema.yml", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "any_type_column_anomalies_validation", "model_name": "any_type_column_anomalies_validation", "normalized_full_path": "elementary_integration_tests/sources/schema.sql"}, "source.elementary_integration_tests.training.any_type_column_anomalies_training": {"name": "any_type_column_anomalies_training", "unique_id": "source.elementary_integration_tests.training.any_type_column_anomalies_training", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "", "full_path": "models/schema.yml", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "any_type_column_anomalies_training", "model_name": "any_type_column_anomalies_training", "normalized_full_path": "elementary_integration_tests/sources/schema.sql"}, "source.elementary_integration_tests.training.string_column_anomalies_training": {"name": "string_column_anomalies_training", "unique_id": "source.elementary_integration_tests.training.string_column_anomalies_training", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "", "full_path": "models/schema.yml", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "string_column_anomalies_training", "model_name": "string_column_anomalies_training", "normalized_full_path": "elementary_integration_tests/sources/schema.sql"}, "source.elementary_integration_tests.training.numeric_column_anomalies_training": {"name": "numeric_column_anomalies_training", "unique_id": "source.elementary_integration_tests.training.numeric_column_anomalies_training", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "", "full_path": "models/schema.yml", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "numeric_column_anomalies_training", "model_name": "numeric_column_anomalies_training", "normalized_full_path": "elementary_integration_tests/sources/schema.sql"}, "source.elementary_integration_tests.schema_changes_data.groups": {"name": "groups", "unique_id": "source.elementary_integration_tests.schema_changes_data.groups", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "", "full_path": "models/schema.yml", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "groups", "model_name": "groups", "normalized_full_path": "elementary_integration_tests/sources/schema.sql"}, "source.elementary_integration_tests.schema_changes_data.stats_players": {"name": "stats_players", "unique_id": "source.elementary_integration_tests.schema_changes_data.stats_players", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "", "full_path": "models/schema.yml", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "stats_players", "model_name": "stats_players", "normalized_full_path": "elementary_integration_tests/sources/schema.sql"}, "source.elementary_integration_tests.schema_changes_data.stats_team": {"name": "stats_team", "unique_id": "source.elementary_integration_tests.schema_changes_data.stats_team", "owners": [], "tags": [], "package_name": "elementary_integration_tests", "description": "", "full_path": "models/schema.yml", "database_name": "elementary_tests", "schema_name": "idan_tests_elementary", "table_name": "stats_team", "model_name": "stats_team", "normalized_full_path": "elementary_integration_tests/sources/schema.sql"}}, "dbt_sidebar": {"elementary_integration_tests": {"models": {"__files__": ["model.elementary_integration_tests.error_model", "model.elementary_integration_tests.any_type_column_anomalies", "model.elementary_integration_tests.numeric_column_anomalies", "model.elementary_integration_tests.string_column_anomalies", "model.elementary_integration_tests.no_timestamp_anomalies", "model.elementary_integration_tests.dimension_anomalies"]}, "sources": {"__files__": ["source.elementary_integration_tests.validation.any_type_column_anomalies_validation", "source.elementary_integration_tests.training.any_type_column_anomalies_training", "source.elementary_integration_tests.training.string_column_anomalies_training", "source.elementary_integration_tests.training.numeric_column_anomalies_training", "source.elementary_integration_tests.schema_changes_data.groups", "source.elementary_integration_tests.schema_changes_data.stats_players", "source.elementary_integration_tests.schema_changes_data.stats_team"]}}, "elementary": {"models": {"edr": {"run_results": {"__files__": ["model.elementary.current_tests_run_results", "model.elementary.elementary_test_results", "model.elementary.model_run_results", "model.elementary.snapshot_run_results"]}, "dbt_artifacts": {"__files__": ["model.elementary.dbt_tests", "model.elementary.dbt_exposures", "model.elementary.dbt_metrics", "model.elementary.dbt_models", "model.elementary.dbt_snapshots", "model.elementary.dbt_run_results", "model.elementary.dbt_sources"]}, "data_monitoring": {"anomaly_detection": {"__files__": ["model.elementary.alerts_anomaly_detection", "model.elementary.anomaly_threshold_sensitivity", "model.elementary.metrics_anomaly_score"]}, "data_monitoring": {"__files__": ["model.elementary.alerts_dbt_tests", "model.elementary.data_monitoring_metrics"]}, "schema_changes": {"__files__": ["model.elementary.alerts_schema_changes", "model.elementary.schema_columns_snapshot"]}}, "system": {"__files__": ["model.elementary.monitors_runs"]}, "alerts": {"__files__": ["model.elementary.alerts_dbt_models"]}, "metadata_store": {"__files__": ["model.elementary.filtered_information_schema_columns", "model.elementary.filtered_information_schema_tables"]}}}}}, "test_results": {"model.elementary_integration_tests.dimension_anomalies": [{"metadata": {"test_unique_id": "test.elementary_integration_tests.dimension_2.1ca50e673a", "database_name": "ELEMENTARY_TESTS", "schema_name": "IDAN_TESTS_ELEMENTARY", "table_name": "DIMENSION_ANOMALIES", "column_name": "", "test_name": "dimension_2", "test_display_name": "Dimension 2", "latest_run_time": "2022-09-18 20:08:41", "latest_run_time_utc": "2022-09-18 17:08:41", "latest_run_status": "fail", "model_unique_id": "model.elementary_integration_tests.dimension_anomalies", "table_unique_id": "elementary_tests.idan_tests_elementary.dimension_anomalies", "test_type": "anomaly_detection", "test_sub_type": "dimension", "test_query": "with anomaly_scores as (\n            select * from \"ELEMENTARY_TESTS\".\"IDAN_TESTS_ELEMENTARY_ELEMENTARY__TESTS\".\"TEST_ELEMENTARY_INTEGRATION_TESTS_DIMENSION_2_1CA50E673A__ANOMALY_SCORES\"\n        ),\n        anomaly_scores_with_is_anomalous as (\n        select  *,\n                case when abs(anomaly_score) > 3\n                and bucket_end >= \n    dateadd(day, '-2', cast('2022-09-18 00:00:00' as TIMESTAMP))\n\n                and training_set_size >= 29 then TRUE else FALSE end as is_anomalous\n            from anomaly_scores\n            where anomaly_score is not null\n        )\n        select metric_value as value,\n               training_avg as average,   \n               case when is_anomalous = TRUE then\n                lag(min_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value order by bucket_end)\n               else min_metric_value end as min_value,\n               case when is_anomalous = TRUE then\n                lag(max_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value order by bucket_end)\n                else max_metric_value end as max_value,\n               bucket_start as start_time,\n               bucket_end as end_time,\n               is_anomalous,\n               dimension,   \n               dimension_value,\n               metric_id\n        from anomaly_scores_with_is_anomalous\n        where upper(full_table_name) = upper(cast('ELEMENTARY_TESTS.IDAN_TESTS_ELEMENTARY.DIMENSION_ANOMALIES' as \n    \n    varchar\n))\n              and metric_name = cast('dimension' as \n    \n    varchar\n)\n                and upper(dimension) = upper(cast('platform' as \n    \n    varchar\n))\n        order by dimension_value, bucket_end", "test_params": {"timestamp_column": "updated_at", "anomaly_threshold": 3}, "test_created_at": "2022-09-18T17:08:41.034000"}, "test_results": {"display_name": "Dimension", "metrics": {"headers": [{"id": "anomalous_value_timestamp", "display_name": "timestamp", "type": "date"}, {"id": "platform", "display_name": "platform", "type": "str"}, {"id": "anomalous_value_row_count", "display_name": "row count", "type": "int"}, {"id": "anomalous_value_average_row_count", "display_name": "average row count", "type": "int"}], "test_rows_sample": [{"anomalous_value_timestamp": "2022-09-18T00:00:00", "anomalous_value_row_count": 297.0, "anomalous_value_average_row_count": 102.0, "platform": "windows"}]}, "result_description": "There are 1 anomalous values for 'platform'"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 1, "warnings": 0, "passed": 0, "resolved": 0}, "invocations": [{"affected_rows": null, "time_utc": "2022-09-18T17:08:41.034000", "id": "215d9630-0255-4c1e-9df7-db97f62850fe.test.elementary_integration_tests.dimension_2.1ca50e673a", "status": "fail"}], "description": "There were 1 failures and no warnings on the last 1 test runs.", "display_name": "Dimension"}}, {"metadata": {"test_unique_id": "test.elementary_integration_tests.dimension_1.72f688ace3", "database_name": "ELEMENTARY_TESTS", "schema_name": "IDAN_TESTS_ELEMENTARY", "table_name": "DIMENSION_ANOMALIES", "column_name": "", "test_name": "dimension_1", "test_display_name": "Dimension 1", "latest_run_time": "2022-09-18 20:08:41", "latest_run_time_utc": "2022-09-18 17:08:41", "latest_run_status": "fail", "model_unique_id": "model.elementary_integration_tests.dimension_anomalies", "table_unique_id": "elementary_tests.idan_tests_elementary.dimension_anomalies", "test_type": "anomaly_detection", "test_sub_type": "dimension", "test_query": "with anomaly_scores as (\n            select * from \"ELEMENTARY_TESTS\".\"IDAN_TESTS_ELEMENTARY_ELEMENTARY__TESTS\".\"TEST_ELEMENTARY_INTEGRATION_TESTS_DIMENSION_1_72F688ACE3__ANOMALY_SCORES\"\n        ),\n        anomaly_scores_with_is_anomalous as (\n        select  *,\n                case when abs(anomaly_score) > 3\n                and bucket_end >= \n    dateadd(day, '-2', cast('2022-09-18 00:00:00' as TIMESTAMP))\n\n                and training_set_size >= 29 then TRUE else FALSE end as is_anomalous\n            from anomaly_scores\n            where anomaly_score is not null\n        )\n        select metric_value as value,\n               training_avg as average,   \n               case when is_anomalous = TRUE then\n                lag(min_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value order by bucket_end)\n               else min_metric_value end as min_value,\n               case when is_anomalous = TRUE then\n                lag(max_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value order by bucket_end)\n                else max_metric_value end as max_value,\n               bucket_start as start_time,\n               bucket_end as end_time,\n               is_anomalous,\n               dimension,   \n               dimension_value,\n               metric_id\n        from anomaly_scores_with_is_anomalous\n        where upper(full_table_name) = upper(cast('ELEMENTARY_TESTS.IDAN_TESTS_ELEMENTARY.DIMENSION_ANOMALIES' as \n    \n    varchar\n))\n              and metric_name = cast('dimension' as \n    \n    varchar\n)\n                and upper(dimension) = upper(cast('platform' as \n    \n    varchar\n))\n        order by dimension_value, bucket_end", "test_params": {"timestamp_column": "updated_at", "anomaly_threshold": 3}, "test_created_at": "2022-09-18T17:02:48.947000"}, "test_results": {"display_name": "Dimension", "metrics": {"headers": [{"id": "anomalous_value_timestamp", "display_name": "timestamp", "type": "date"}, {"id": "platform", "display_name": "platform", "type": "str"}, {"id": "anomalous_value_row_count", "display_name": "row count", "type": "int"}, {"id": "anomalous_value_average_row_count", "display_name": "average row count", "type": "int"}], "test_rows_sample": [{"anomalous_value_timestamp": "2022-09-18T00:00:00", "anomalous_value_row_count": 297.0, "anomalous_value_average_row_count": 102.0, "platform": "windows"}]}, "result_description": "There are 1 anomalous values for 'platform'"}, "test_runs": {"fail_rate": 1.0, "totals": {"errors": 3, "warnings": 0, "passed": 0, "resolved": 0}, "invocations": [{"affected_rows": null, "time_utc": "2022-09-18T17:02:48.947000", "id": "55cb4da1-4282-4485-9dca-5368bc699882.test.elementary_integration_tests.dimension_1.72f688ace3", "status": "fail"}, {"affected_rows": null, "time_utc": "2022-09-18T17:04:53.827000", "id": "8df4fa6d-aa72-4415-9b45-db7982c9b1a4.test.elementary_integration_tests.dimension_1.72f688ace3", "status": "fail"}, {"affected_rows": null, "time_utc": "2022-09-18T17:08:41.032000", "id": "215d9630-0255-4c1e-9df7-db97f62850fe.test.elementary_integration_tests.dimension_1.72f688ace3", "status": "fail"}], "description": "There were 3 failures and no warnings on the last 3 test runs.", "display_name": "Dimension"}}, {"metadata": {"test_unique_id": "test.elementary_integration_tests.dimension_1.b9c83a4c6f", "database_name": "ELEMENTARY_TESTS", "schema_name": "IDAN_TESTS_ELEMENTARY", "table_name": "DIMENSION_ANOMALIES", "column_name": "", "test_name": "dimension_1", "test_display_name": "Dimension 1", "latest_run_time": "2022-09-18 20:08:41", "latest_run_time_utc": "2022-09-18 17:08:41", "latest_run_status": "pass", "model_unique_id": "model.elementary_integration_tests.dimension_anomalies", "table_unique_id": "elementary_tests.idan_tests_elementary.dimension_anomalies", "test_type": "anomaly_detection", "test_sub_type": "dimension", "test_query": "with anomaly_scores as (\n            select * from \"ELEMENTARY_TESTS\".\"IDAN_TESTS_ELEMENTARY_ELEMENTARY__TESTS\".\"TEST_ELEMENTARY_INTEGRATION_TESTS_DIMENSION_1_B9C83A4C6F__ANOMALY_SCORES\"\n        ),\n        anomaly_scores_with_is_anomalous as (\n        select  *,\n                case when abs(anomaly_score) > 3\n                and bucket_end >= \n    dateadd(day, '-2', cast('2022-09-18 00:00:00' as TIMESTAMP))\n\n                and training_set_size >= 29 then TRUE else FALSE end as is_anomalous\n            from anomaly_scores\n            where anomaly_score is not null\n        )\n        select metric_value as value,\n               training_avg as average,   \n               case when is_anomalous = TRUE then\n                lag(min_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value order by bucket_end)\n               else min_metric_value end as min_value,\n               case when is_anomalous = TRUE then\n                lag(max_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value order by bucket_end)\n                else max_metric_value end as max_value,\n               bucket_start as start_time,\n               bucket_end as end_time,\n               is_anomalous,\n               dimension,   \n               dimension_value,\n               metric_id\n        from anomaly_scores_with_is_anomalous\n        where upper(full_table_name) = upper(cast('ELEMENTARY_TESTS.IDAN_TESTS_ELEMENTARY.DIMENSION_ANOMALIES' as \n    \n    varchar\n))\n              and metric_name = cast('dimension' as \n    \n    varchar\n)\n                and upper(dimension) = upper(cast('platform; version' as \n    \n    varchar\n))\n        order by dimension_value, bucket_end", "test_params": {"timestamp_column": "updated_at", "anomaly_threshold": 3}, "test_created_at": "2022-09-18T17:04:53.610000"}, "test_results": {"display_name": "Dimension", "metrics": {"headers": [{"id": "anomalous_value_timestamp", "display_name": "timestamp", "type": "date"}, {"id": "anomalous_value_row_count", "display_name": "row count", "type": "int"}, {"id": "anomalous_value_average_row_count", "display_name": "average row count", "type": "int"}], "test_rows_sample": []}, "result_description": ""}, "test_runs": {"fail_rate": 0.0, "totals": {"errors": 0, "warnings": 0, "passed": 2, "resolved": 0}, "invocations": [{"affected_rows": null, "time_utc": "2022-09-18T17:04:53.610000", "id": "8df4fa6d-aa72-4415-9b45-db7982c9b1a4.test.elementary_integration_tests.dimension_1.b9c83a4c6f", "status": "pass"}, {"affected_rows": null, "time_utc": "2022-09-18T17:08:41.031000", "id": "215d9630-0255-4c1e-9df7-db97f62850fe.test.elementary_integration_tests.dimension_1.b9c83a4c6f", "status": "pass"}], "description": "There were no failures and no warnings on the last 2 test runs.", "display_name": "Dimension"}}, {"metadata": {"test_unique_id": "test.elementary_integration_tests.elementary_dimension_anomalies_dimension_anomalies_platform__version__platform_windows_.e6b451e09f", "database_name": "ELEMENTARY_TESTS", "schema_name": "IDAN_TESTS_ELEMENTARY", "table_name": "DIMENSION_ANOMALIES", "column_name": "", "test_name": "elementary_dimension_anomalies_dimension_anomalies_platform__version__platform_windows_", "test_display_name": "Elementary Dimension Anomalies Dimension Anomalies Platform  Version  Platform Windows ", "latest_run_time": "2022-09-18 20:08:41", "latest_run_time_utc": "2022-09-18 17:08:41", "latest_run_status": "pass", "model_unique_id": "model.elementary_integration_tests.dimension_anomalies", "table_unique_id": "elementary_tests.idan_tests_elementary.dimension_anomalies", "test_type": "anomaly_detection", "test_sub_type": "dimension", "test_query": "with anomaly_scores as (\n            select * from \"ELEMENTARY_TESTS\".\"IDAN_TESTS_ELEMENTARY_ELEMENTARY__TESTS\".\"ELEMENTARY_DIMENSION_ANOMALIES_DIMENSION_ANOMALIES_PLATFORM__VERSION__PLATFORM_WINDOWS___ANOMALY_SCORES\"\n        ),\n        anomaly_scores_with_is_anomalous as (\n        select  *,\n                case when abs(anomaly_score) > 3\n                and bucket_end >= \n    dateadd(day, '-2', cast('2022-09-18 00:00:00' as TIMESTAMP))\n\n                and training_set_size >= 29 then TRUE else FALSE end as is_anomalous\n            from anomaly_scores\n            where anomaly_score is not null\n        )\n        select metric_value as value,\n               training_avg as average,   \n               case when is_anomalous = TRUE then\n                lag(min_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value order by bucket_end)\n               else min_metric_value end as min_value,\n               case when is_anomalous = TRUE then\n                lag(max_metric_value) over (partition by full_table_name, column_name, metric_name, dimension, dimension_value order by bucket_end)\n                else max_metric_value end as max_value,\n               bucket_start as start_time,\n               bucket_end as end_time,\n               is_anomalous,\n               dimension,   \n               dimension_value,\n               metric_id\n        from anomaly_scores_with_is_anomalous\n        where upper(full_table_name) = upper(cast('ELEMENTARY_TESTS.IDAN_TESTS_ELEMENTARY.DIMENSION_ANOMALIES' as \n    \n    varchar\n))\n              and metric_name = cast('dimension' as \n    \n    varchar\n)\n                and upper(dimension) = upper(cast('platform; version' as \n    \n    varchar\n))\n        order by dimension_value, bucket_end", "test_params": {"timestamp_column": "updated_at", "anomaly_threshold": 3}, "test_created_at": "2022-09-18T17:02:49.358000"}, "test_results": {"display_name": "Dimension", "metrics": {"headers": [{"id": "anomalous_value_timestamp", "display_name": "timestamp", "type": "date"}, {"id": "anomalous_value_row_count", "display_name": "row count", "type": "int"}, {"id": "anomalous_value_average_row_count", "display_name": "average row count", "type": "int"}], "test_rows_sample": []}, "result_description": ""}, "test_runs": {"fail_rate": 0.67, "totals": {"errors": 2, "warnings": 0, "passed": 1, "resolved": 0}, "invocations": [{"affected_rows": null, "time_utc": "2022-09-18T17:02:49.358000", "id": "55cb4da1-4282-4485-9dca-5368bc699882.test.elementary_integration_tests.elementary_dimension_anomalies_dimension_anomalies_platform__version__platform_windows_.e6b451e09f", "status": "fail"}, {"affected_rows": null, "time_utc": "2022-09-18T17:04:53.931000", "id": "8df4fa6d-aa72-4415-9b45-db7982c9b1a4.test.elementary_integration_tests.elementary_dimension_anomalies_dimension_anomalies_platform__version__platform_windows_.e6b451e09f", "status": "fail"}, {"affected_rows": null, "time_utc": "2022-09-18T17:08:41.039000", "id": "215d9630-0255-4c1e-9df7-db97f62850fe.test.elementary_integration_tests.elementary_dimension_anomalies_dimension_anomalies_platform__version__platform_windows_.e6b451e09f", "status": "pass"}], "description": "There were 2 failures and no warnings on the last 3 test runs.", "display_name": "Dimension"}}]}, "test_results_totals": {"model.elementary_integration_tests.dimension_anomalies": {"errors": 2, "warnings": 0, "resolved": 0, "passed": 2}}, "test_runs_totals": {"model.elementary_integration_tests.dimension_anomalies": {"errors": 6, "warnings": 0, "resolved": 0, "passed": 3}}, "coverages": {"model.elementary_integration_tests.numeric_column_anomalies": {"table_tests": 4, "column_tests": 14}, "null": {"table_tests": 2, "column_tests": 0}, "model.elementary_integration_tests.error_model": {"table_tests": 0, "column_tests": 1}, "source.elementary_integration_tests.training.numeric_column_anomalies_training": {"table_tests": 1, "column_tests": 0}, "model.elementary_integration_tests.any_type_column_anomalies": {"table_tests": 3, "column_tests": 0}, "model.elementary_integration_tests.string_column_anomalies": {"table_tests": 3, "column_tests": 7}, "model.elementary_integration_tests.no_timestamp_anomalies": {"table_tests": 1, "column_tests": 3}, "model.elementary_integration_tests.dimension_anomalies": {"table_tests": 4, "column_tests": 0}, "source.elementary_integration_tests.validation.any_type_column_anomalies_validation": {"table_tests": 1, "column_tests": 1}, "source.elementary_integration_tests.training.any_type_column_anomalies_training": {"table_tests": 1, "column_tests": 0}, "source.elementary_integration_tests.training.string_column_anomalies_training": {"table_tests": 1, "column_tests": 0}, "source.elementary_integration_tests.schema_changes_data.stats_team": {"table_tests": 1, "column_tests": 0}, "source.elementary_integration_tests.schema_changes_data.stats_players": {"table_tests": 1, "column_tests": 0}, "source.elementary_integration_tests.schema_changes_data.groups": {"table_tests": 1, "column_tests": 0}}, "model_runs": [{"unique_id": "model.elementary.metrics_anomaly_score", "schema": "idan_tests_elementary_elementary", "name": "metrics_anomaly_score", "status": "success", "last_exec_time": "1.465", "compiled_sql": "\n\nwith data_monitoring_metrics as (\n\n    select * from elementary_tests.idan_tests_elementary_elementary.data_monitoring_metrics\n\n),\n\ndaily_buckets as (\n\n   \n    \n        with dates as (\n            select cast('2022-08-19 00:00:00' as TIMESTAMP) as date\n        union all\n        select \n    dateadd(day, 1, cast(date as TIMESTAMP))\n\n        from dates\n        where \n    dateadd(day, 1, cast(date as TIMESTAMP))\n <= cast('2022-09-18 00:00:00' as TIMESTAMP)\n            )\n        select date as edr_daily_bucket\n        from dates\n\n\n),\n\ntime_window_aggregation as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        metric_value,\n        source_value,\n        bucket_start,\n        bucket_end,\n        bucket_duration_hours,\n        updated_at,\n        edr_daily_bucket,\n        avg(metric_value) over (partition by metric_name, full_table_name, column_name order by edr_daily_bucket asc rows between 30 preceding and current row) as training_avg,\n        stddev(metric_value) over (partition by metric_name, full_table_name, column_name order by edr_daily_bucket asc rows between 30 preceding and current row) as training_stddev,\n        count(metric_value) over (partition by metric_name, full_table_name, column_name order by edr_daily_bucket asc rows between 30 preceding and current row) as training_set_size,\n        last_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by edr_daily_bucket asc rows between 30 preceding and current row) training_end,\n        first_value(bucket_end) over (partition by metric_name, full_table_name, column_name order by edr_daily_bucket asc rows between 30 preceding and current row) as training_start\n    from daily_buckets left join\n        data_monitoring_metrics on (edr_daily_bucket = bucket_end)\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13\n\n),\n\nmetrics_anomaly_score as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        case\n            when training_stddev is null then null\n            when training_stddev = 0 then 0\n            else (metric_value - training_avg) / (training_stddev)\n        end as anomaly_score,\n        metric_value as latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        max(updated_at) as updated_at\n    from time_window_aggregation\n        where\n            metric_value is not null\n            and training_avg is not null\n            and training_set_size >= 29\n            and bucket_end >= \n    dateadd(day, -7, cast(date_trunc('day', \n    current_timestamp::TIMESTAMP\n) as TIMESTAMP))\n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n    order by bucket_end desc\n\n\n),\n\nfinal as (\n\n    select\n        id,\n        full_table_name,\n        column_name,\n        dimension,\n        dimension_value,\n        metric_name,\n        anomaly_score,\n        latest_metric_value,\n        bucket_start,\n        bucket_end,\n        training_avg,\n        training_stddev,\n        training_start,\n        training_end,\n        training_set_size,\n        updated_at,\n        case\n            when abs(anomaly_score) > 3 then true\n            else false end\n        as is_anomaly\n    from metrics_anomaly_score\n)\n\nselect * from final", "median_exec_time": 1.147, "exec_time_change_rate": 27.732, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.dbt_metrics", "schema": "idan_tests_elementary_elementary", "name": "dbt_metrics", "status": "success", "last_exec_time": "2.897", "compiled_sql": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as \n    \n    varchar\n) as unique_id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as label\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as model\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as sql\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as timestamp\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as filters\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as time_grains\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as dimensions\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as meta\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as original_path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as generated_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "median_exec_time": 3.323, "exec_time_change_rate": -12.801, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "table"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "table"}]}, {"unique_id": "model.elementary.data_monitoring_metrics", "schema": "idan_tests_elementary_elementary", "name": "data_monitoring_metrics", "status": "success", "last_exec_time": "1.761", "compiled_sql": "\n\n\n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as \n    \n    varchar\n) as id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as full_table_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as column_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as metric_name\n\n,\n                \n        cast(123456789.99 as FLOAT) as metric_value\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as source_value\n\n,\n                cast('2091-02-17' as TIMESTAMP) as bucket_start\n\n,\n                cast('2091-02-17' as TIMESTAMP) as bucket_end\n\n,\n                \n        cast(123456789 as INT) as bucket_duration_hours\n\n,\n                cast('2091-02-17' as TIMESTAMP) as updated_at\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as dimension\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as dimension_value\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "median_exec_time": 4.216, "exec_time_change_rate": -58.221, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "incremental"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "incremental"}]}, {"unique_id": "model.elementary.snapshot_run_results", "schema": "idan_tests_elementary_elementary", "name": "snapshot_run_results", "status": "success", "last_exec_time": "0.954", "compiled_sql": "\n\nwith dbt_run_results as (\n    select * from elementary_tests.idan_tests_elementary_elementary.dbt_run_results\n),\n\ndbt_snapshots as (\n    select * from elementary_tests.idan_tests_elementary_elementary.dbt_snapshots\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    snapshots.database_name,\n    snapshots.schema_name,\n    snapshots.materialization,\n    snapshots.tags,\n    snapshots.path,\n    snapshots.original_path,\n    snapshots.owner,\n    snapshots.alias\nFROM dbt_run_results run_results\nJOIN dbt_snapshots snapshots ON run_results.unique_id = snapshots.unique_id", "median_exec_time": 1.02, "exec_time_change_rate": -6.45, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.filtered_information_schema_tables", "schema": "idan_tests_elementary_elementary", "name": "filtered_information_schema_tables", "status": "success", "last_exec_time": "4.677", "compiled_sql": "\n\n\n\nwith filtered_information_schema_tables as (\n\n    \n        \n    \n\n    (with information_schema_tables as (\n\n        select\n            upper(table_catalog) as database_name,\n            upper(table_schema) as schema_name,\n            upper(table_name) as table_name\n        from elementary_tests.INFORMATION_SCHEMA.TABLES\n        where upper(table_schema) = upper('idan_tests_elementary')\n\n    ),\n\n    information_schema_schemata as (\n\n        select\n            upper(catalog_name) as database_name,\n            upper(schema_name) as schema_name\n        from elementary_tests.INFORMATION_SCHEMA.SCHEMATA\n        where upper(schema_name) = upper('idan_tests_elementary')\n\n    )\n\n    select\n        case when tables.table_name is not null\n            then \n    upper(TABLES.database_name || '.' || TABLES.schema_name || '.' || TABLES.table_name)\n        else null end as full_table_name,\n        upper(schemas.database_name || '.' || schemas.schema_name) as full_schema_name,\n        schemas.database_name as database_name,\n        schemas.schema_name as schema_name,\n        tables.table_name\n    from information_schema_tables as tables\n    full outer join information_schema_schemata as schemas\n    on (tables.database_name = schemas.database_name and tables.schema_name = schemas.schema_name)\n    )\n\n\n        \n    \n\n\n\n)\n\nselect *\nfrom filtered_information_schema_tables\nwhere schema_name is not null", "median_exec_time": 5.258, "exec_time_change_rate": -11.05, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.alerts_dbt_models", "schema": "idan_tests_elementary_elementary", "name": "alerts_dbt_models", "status": "success", "last_exec_time": "0.992", "compiled_sql": "\n\nwith error_models as (\n    select * from elementary_tests.idan_tests_elementary_elementary.model_run_results\n    union all\n    select * from elementary_tests.idan_tests_elementary_elementary.snapshot_run_results\n)\n\n\nselect model_execution_id as alert_id,\n       unique_id,\n       generated_at as detected_at,\n       database_name,\n       materialization,\n       path,\n       original_path,\n       schema_name,\n       message,\n       owner as owners,\n       tags,\n       alias,\n       status,\n       full_refresh\nfrom error_models\nwhere True and lower(status) != 'success'", "median_exec_time": 0.992, "exec_time_change_rate": 0.0, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.schema_columns_snapshot", "schema": "idan_tests_elementary_elementary", "name": "schema_columns_snapshot", "status": "success", "last_exec_time": "2.208", "compiled_sql": "\n\n\n    with empty_table as (\n            select\n            \n                \n        cast('dummy_string' as \n    \n    varchar\n) as column_state_id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as full_column_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as full_table_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as column_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as data_type\n\n,\n                \n        cast (True as \n    boolean\n) as is_new\n\n,\n                cast('2091-02-17' as TIMESTAMP) as detected_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "median_exec_time": 3.945, "exec_time_change_rate": -44.039, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "incremental"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "incremental"}]}, {"unique_id": "model.elementary.model_run_results", "schema": "idan_tests_elementary_elementary", "name": "model_run_results", "status": "success", "last_exec_time": "1.007", "compiled_sql": "\n\nwith dbt_run_results as (\n    select * from elementary_tests.idan_tests_elementary_elementary.dbt_run_results\n),\n\ndbt_models as (\n    select * from elementary_tests.idan_tests_elementary_elementary.dbt_models\n)\n\nSELECT\n    run_results.model_execution_id,\n    run_results.unique_id,\n    run_results.generated_at,\n    run_results.status,\n    run_results.full_refresh,\n    run_results.message,\n    models.database_name,\n    models.schema_name,\n    models.materialization,\n    models.tags,\n    models.path,\n    models.original_path,\n    models.owner,\n    models.alias\nFROM dbt_run_results run_results\nJOIN dbt_models models ON run_results.unique_id = models.unique_id", "median_exec_time": 1.085, "exec_time_change_rate": -7.169, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.alerts_schema_changes", "schema": "idan_tests_elementary_elementary", "name": "alerts_schema_changes", "status": "success", "last_exec_time": "1.159", "compiled_sql": "\n\n\nwith elementary_test_results as (\n    select * from elementary_tests.idan_tests_elementary_elementary.elementary_test_results\n),\n\nalerts_schema_changes as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_params,\n           severity,\n           status\n        from elementary_test_results\n        where True and lower(status) != 'pass'and test_type = 'schema_change'\n)\n\nselect * from alerts_schema_changes", "median_exec_time": 1.224, "exec_time_change_rate": -5.332, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.monitors_runs", "schema": "idan_tests_elementary_elementary", "name": "monitors_runs", "status": "success", "last_exec_time": "1.436", "compiled_sql": "\n\nwith data_monitoring_metrics as (\n\n    select * from elementary_tests.idan_tests_elementary_elementary.data_monitoring_metrics\n\n),\n\nmax_bucket_end as (\n\n    select full_table_name,\n           column_name,\n           metric_name,\n           max(bucket_end) as last_bucket_end\n    from data_monitoring_metrics\n    group by 1,2,3\n\n)\n\nselect * from max_bucket_end", "median_exec_time": 1.047, "exec_time_change_rate": 37.162, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.dbt_sources", "schema": "idan_tests_elementary_elementary", "name": "dbt_sources", "status": "success", "last_exec_time": "3.289", "compiled_sql": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as \n    \n    varchar\n) as unique_id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as database_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as schema_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as source_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as identifier\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as loaded_at_field\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as freshness_warn_after\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as freshness_error_after\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as freshness_filter\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as relation_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as meta\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as owner\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as original_path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as source_description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as description\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as generated_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "median_exec_time": 4.065, "exec_time_change_rate": -19.095, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "table"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "table"}]}, {"unique_id": "model.elementary_integration_tests.dimension_anomalies", "schema": "idan_tests_elementary", "name": "dimension_anomalies", "status": "success", "last_exec_time": "2.174", "compiled_sql": "-- depends_on: elementary_tests.idan_tests_elementary.dimension_anomalies_validation\n\nwith training as (\n    select * from elementary_tests.idan_tests_elementary.dimension_anomalies_training\n),\n\n\n source as (\n     select * from training\n ),\n\n\n final as (\n     select\n         date as updated_at,\n         platform,\n         version,\n         user_id\n     from source\n )\n\nselect * from final", "median_exec_time": 2.174, "exec_time_change_rate": 0.0, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.alerts_dbt_tests", "schema": "idan_tests_elementary_elementary", "name": "alerts_dbt_tests", "status": "success", "last_exec_time": "1.17", "compiled_sql": "\n\nwith elementary_test_results as (\n    select * from elementary_tests.idan_tests_elementary_elementary.elementary_test_results\n),\n\nalerts_dbt_tests as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_params,\n           severity,\n           status\n        from elementary_test_results\n        where True and lower(status) != 'pass'and test_type = 'dbt_test'\n)\n\nselect * from alerts_dbt_tests", "median_exec_time": 1.19, "exec_time_change_rate": -1.698, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary_integration_tests.error_model", "schema": "idan_tests_elementary", "name": "error_model", "status": "error", "last_exec_time": "2.484", "compiled_sql": "select 'a's as string", "median_exec_time": 2.484, "exec_time_change_rate": 0.0, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 5, "success": 0}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "error", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "error", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "error", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "error", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "error", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary_integration_tests.any_type_column_anomalies", "schema": "idan_tests_elementary", "name": "any_type_column_anomalies", "status": "success", "last_exec_time": "2.207", "compiled_sql": "-- depends_on: elementary_tests.idan_tests_elementary.any_type_column_anomalies_validation\n\nwith training as (\n    select * from elementary_tests.idan_tests_elementary.any_type_column_anomalies_training\n),\n\n\n source as (\n     select * from training\n ),\n\n\n final as (\n     select\n         date as updated_at,\n         null_count_str,\n         null_percent_str,\n         null_count_float,\n         null_percent_float,\n         null_count_int,\n         null_percent_int,\n         null_count_bool,\n         null_percent_bool\n     from source\n )\n\nselect * from final", "median_exec_time": 2.207, "exec_time_change_rate": 0.0, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary_integration_tests.numeric_column_anomalies", "schema": "idan_tests_elementary", "name": "numeric_column_anomalies", "status": "success", "last_exec_time": "1.493", "compiled_sql": "-- depends_on: elementary_tests.idan_tests_elementary.numeric_column_anomalies_validation\n\nwith training as (\n    select * from elementary_tests.idan_tests_elementary.numeric_column_anomalies_training\n),\n\n\n source as (\n     select * from training\n ),\n\n\n final as (\n     select\n         date as updated_at,\n         min,\n         max,\n         zero_count,\n         zero_percent,\n         average,\n         standard_deviation,\n         variance\n     from source\n )\n\nselect * from final", "median_exec_time": 1.623, "exec_time_change_rate": -8.044, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.elementary_test_results", "schema": "idan_tests_elementary_elementary", "name": "elementary_test_results", "status": "success", "last_exec_time": "2.195", "compiled_sql": "\n\n\n    with empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as data_issue_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as test_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as test_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as model_unique_id\n\n,\n                cast('2091-02-17' as TIMESTAMP) as detected_at\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as database_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as schema_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as table_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as column_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as test_type\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as test_sub_type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as test_results_description\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as owners\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as test_results_query\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as other\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as test_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as test_params\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as severity\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as status\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as test_short_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as test_alias\n\n\n            )\n        select * from empty_table\n        where 1 = 0\n", "median_exec_time": 4.073, "exec_time_change_rate": -46.112, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "incremental"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "incremental"}]}, {"unique_id": "model.elementary.dbt_snapshots", "schema": "idan_tests_elementary_elementary", "name": "dbt_snapshots", "status": "success", "last_exec_time": "3.289", "compiled_sql": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as \n    \n    varchar\n) as unique_id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as alias\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as checksum\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as meta\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as owner\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as database_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as description\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as original_path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as generated_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "median_exec_time": 4.063, "exec_time_change_rate": -19.061, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "table"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "table"}]}, {"unique_id": "model.elementary.dbt_models", "schema": "idan_tests_elementary_elementary", "name": "dbt_models", "status": "success", "last_exec_time": "3.311", "compiled_sql": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as \n    \n    varchar\n) as unique_id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as alias\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as checksum\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as materialization\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as meta\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as owner\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as database_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as schema_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as description\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as original_path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as generated_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "median_exec_time": 3.902, "exec_time_change_rate": -15.167, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "table"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "table"}]}, {"unique_id": "model.elementary.dbt_run_results", "schema": "idan_tests_elementary_elementary", "name": "dbt_run_results", "status": "success", "last_exec_time": "2.203", "compiled_sql": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as model_execution_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as unique_id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as invocation_id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as generated_at\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as message\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as status\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as resource_type\n\n,\n                \n        cast(123456789.99 as FLOAT) as execution_time\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as execute_started_at\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as execute_completed_at\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as compile_started_at\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as compile_completed_at\n\n,\n                \n        cast(31474836478 as bigint) as rows_affected\n\n,\n                \n        cast (True as \n    boolean\n) as full_refresh\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as compiled_sql\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "median_exec_time": 4.087, "exec_time_change_rate": -46.098, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "incremental"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "incremental"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "incremental"}]}, {"unique_id": "model.elementary_integration_tests.no_timestamp_anomalies", "schema": "idan_tests_elementary", "name": "no_timestamp_anomalies", "status": "success", "last_exec_time": "2.238", "compiled_sql": "-- depends_on: elementary_tests.idan_tests_elementary.any_type_column_anomalies_validation\n\nwith training as (\n    select * from elementary_tests.idan_tests_elementary.any_type_column_anomalies_training\n),\n\n\n source as (\n     select * from training\n ),\n\n\n final as (\n     select\n         date as updated_at,\n         null_count_str,\n         null_percent_str,\n         null_count_float,\n         null_percent_float,\n         null_count_int,\n         null_percent_int,\n         null_count_bool,\n         null_percent_bool\n     from source\n )\n\nselect * from final", "median_exec_time": 2.238, "exec_time_change_rate": 0.0, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.filtered_information_schema_columns", "schema": "idan_tests_elementary_elementary", "name": "filtered_information_schema_columns", "status": "success", "last_exec_time": "4.685", "compiled_sql": "\n\n\n\nwith filtered_information_schema_columns as (\n        \n\n    \n        \n    \n\n    select\n        upper(table_catalog || '.' || table_schema || '.' || table_name) as full_table_name,\n        upper(table_catalog) as database_name,\n        upper(table_schema) as schema_name,\n        upper(table_name) as table_name,\n        upper(column_name) as column_name,\n        data_type\n    from elementary_tests.INFORMATION_SCHEMA.COLUMNS\n    where upper(table_schema) = upper('idan_tests_elementary')\n\n\n        \n    \n\n\n\n)\n\nselect *\nfrom filtered_information_schema_columns\nwhere full_table_name is not null", "median_exec_time": 4.939, "exec_time_change_rate": -5.14, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.anomaly_threshold_sensitivity", "schema": "idan_tests_elementary_elementary", "name": "anomaly_threshold_sensitivity", "status": "success", "last_exec_time": "0.929", "compiled_sql": "\n\nwith metrics_anomaly_score as (\n\n    select * from elementary_tests.idan_tests_elementary_elementary.metrics_anomaly_score\n\n),\n\nscore_sensitivity as (\n\n    select\n        full_table_name,\n        column_name,\n        metric_name,\n        latest_metric_value,\n        training_avg as metric_avg,\n        training_stddev as metric_stddev,\n        anomaly_score,\n        case when abs(anomaly_score) >= 1.5 then true else false end as \n    \"is_anomaly_1_5\"\n,\n        case when abs(anomaly_score) >= 2 then true else false end as \n    \"is_anomaly_2\"\n,\n        case when abs(anomaly_score) >= 2.5 then true else false end as \n    \"is_anomaly_2_5\"\n,\n        case when abs(anomaly_score) >= 3 then true else false end as \n    \"is_anomaly_3\"\n,\n        case when abs(anomaly_score) >= 3.5 then true else false end as \n    \"is_anomaly_3_5\"\n,\n        case when abs(anomaly_score) >= 4 then true else false end as \n    \"is_anomaly_4\"\n,\n        case when abs(anomaly_score) >= 4.5 then true else false end as \n    \"is_anomaly_4_5\"\n\n    from metrics_anomaly_score\n    where abs(anomaly_score) >= 1.5\n\n)\n\nselect * from score_sensitivity", "median_exec_time": 1.029, "exec_time_change_rate": -9.765, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary_integration_tests.string_column_anomalies", "schema": "idan_tests_elementary", "name": "string_column_anomalies", "status": "success", "last_exec_time": "2.199", "compiled_sql": "-- depends_on: elementary_tests.idan_tests_elementary.string_column_anomalies_validation\n\nwith training as (\n    select * from elementary_tests.idan_tests_elementary.string_column_anomalies_training\n),\n\n\nsource as (\n    select * from training\n),\n\n\nfinal as (\n     select\n        date as updated_at,\n        min_length,\n        max_length,\n        average_length,\n        missing_count,\n        missing_percent\n     from source\n)\n\nselect * from final", "median_exec_time": 2.062, "exec_time_change_rate": 6.637, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.dbt_exposures", "schema": "idan_tests_elementary_elementary", "name": "dbt_exposures", "status": "success", "last_exec_time": "2.892", "compiled_sql": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as \n    \n    varchar\n) as unique_id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as maturity\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as type\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as owner_email\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as owner_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as url\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_nodes\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as description\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as meta\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as package_name\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as original_path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as generated_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "median_exec_time": 3.252, "exec_time_change_rate": -11.068, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "table"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "table"}]}, {"unique_id": "model.elementary.current_tests_run_results", "schema": "idan_tests_elementary_elementary", "name": "current_tests_run_results", "status": "success", "last_exec_time": "0.995", "compiled_sql": "\n\nwith elementary_test_results as (\n    select * from elementary_tests.idan_tests_elementary_elementary.elementary_test_results\n),\n\ndbt_tests as (\n    select * from elementary_tests.idan_tests_elementary_elementary.dbt_tests\n),\n\nfirst_time_test_occurred as (\n    select \n        min(detected_at) as first_time_occurred,\n        test_unique_id\n    from elementary_test_results\n    group by test_unique_id\n)\n\nSELECT\n    test_results.id,\n    test_results.data_issue_id,\n    test_results.test_execution_id,\n    test_results.test_unique_id,\n    test_results.model_unique_id,\n    test_results.detected_at,\n    test_results.database_name,\n    test_results.schema_name,\n    test_results.table_name,\n    test_results.column_name,\n    test_results.test_type,\n    test_results.test_sub_type,\n    test_results.test_results_description,\n    test_results.owners,\n    test_results.tags,\n    test_results.test_results_query,\n    test_results.other,\n    test_results.test_name,\n    test_results.test_params,\n    test_results.severity,\n    test_results.status,\n    first_occurred.first_time_occurred as test_created_at\nFROM elementary_test_results test_results\nJOIN dbt_tests tests ON test_results.test_unique_id = tests.unique_id\nLEFT JOIN first_time_test_occurred first_occurred ON test_results.test_unique_id = first_occurred.test_unique_id", "median_exec_time": 0.995, "exec_time_change_rate": 0.0, "generated_at": "2022-09-19 20:57:33", "totals": {"errors": 0, "success": 1}, "runs": [{"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.alerts_anomaly_detection", "schema": "idan_tests_elementary_elementary", "name": "alerts_anomaly_detection", "status": "success", "last_exec_time": "1.05", "compiled_sql": "\n\nwith elementary_test_results as (\n    select * from elementary_tests.idan_tests_elementary_elementary.elementary_test_results\n),\n\nalerts_anomaly_detection as (\n    select id as alert_id,\n           data_issue_id,\n           test_execution_id,\n           test_unique_id,\n           model_unique_id,\n           detected_at,\n           database_name,\n           schema_name,\n           table_name,\n           column_name,\n           test_type as alert_type,\n           test_sub_type as sub_type,\n           test_results_description as alert_description,\n           owners,\n           tags,\n           test_results_query as alert_results_query,\n           other,\n           test_name,\n           test_params,\n           severity,\n           status\n        from elementary_test_results\n        where True and lower(status) != 'pass'and test_type = 'anomaly_detection'\n)\n\nselect * from alerts_anomaly_detection", "median_exec_time": 1.156, "exec_time_change_rate": -9.185, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "view"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "view"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "view"}]}, {"unique_id": "model.elementary.dbt_tests", "schema": "idan_tests_elementary_elementary", "name": "dbt_tests", "status": "success", "last_exec_time": "3.925", "compiled_sql": "\n\nwith empty_table as (\n            select\n            \n                \n        cast('dummy_string' as \n    \n    varchar\n) as unique_id\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as database_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as schema_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as short_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as alias\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as test_column_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as severity\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as warn_if\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as error_if\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as test_params\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as test_namespace\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as model_tags\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as model_owners\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as meta\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_macros\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as depends_on_nodes\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as parent_model_unique_id\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as description\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as package_name\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as type\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as original_path\n\n,\n                \n        cast('this_is_just_a_long_dummy_string' as \n    \n    \n    varchar\n) as compiled_sql\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as path\n\n,\n                \n        cast('dummy_string' as \n    \n    varchar\n) as generated_at\n\n\n            )\n        select * from empty_table\n        where 1 = 0", "median_exec_time": 4.314, "exec_time_change_rate": -9.006, "generated_at": "2022-09-18 17:02:14", "totals": {"errors": 0, "success": 5}, "runs": [{"id": "b1b13343-88bb-4d7a-8e4c-d2bf22fc1bd1", "time_utc": "2022-09-18 17:02:14", "status": "success", "full_refresh": true, "materialization": "table"}, {"id": "744e4e97-08e4-4d65-94a9-e61f671e7540", "time_utc": "2022-09-18 17:02:38", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "6c57d267-8368-460e-a731-fced14dab9e9", "time_utc": "2022-09-18 17:04:40", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "5764e175-6a06-443e-b943-f821c1b0ae14", "time_utc": "2022-09-18 17:08:29", "status": "success", "full_refresh": false, "materialization": "table"}, {"id": "03a2fce6-44ba-451b-8548-b6224dbbc9dd", "time_utc": "2022-09-19 20:57:33", "status": "success", "full_refresh": false, "materialization": "table"}]}], "lineage": {"nodes": [{"id": "model.elementary_integration_tests.error_model", "type": "model"}, {"id": "model.elementary_integration_tests.any_type_column_anomalies", "type": "model"}, {"id": "model.elementary_integration_tests.numeric_column_anomalies", "type": "model"}, {"id": "model.elementary_integration_tests.string_column_anomalies", "type": "model"}, {"id": "model.elementary_integration_tests.no_timestamp_anomalies", "type": "model"}, {"id": "model.elementary_integration_tests.dimension_anomalies", "type": "model"}, {"id": "model.elementary.current_tests_run_results", "type": "model"}, {"id": "model.elementary.dbt_tests", "type": "model"}, {"id": "model.elementary.alerts_anomaly_detection", "type": "model"}, {"id": "model.elementary.alerts_dbt_tests", "type": "model"}, {"id": "model.elementary.alerts_schema_changes", "type": "model"}, {"id": "model.elementary.elementary_test_results", "type": "model"}, {"id": "model.elementary.anomaly_threshold_sensitivity", "type": "model"}, {"id": "model.elementary.metrics_anomaly_score", "type": "model"}, {"id": "model.elementary.monitors_runs", "type": "model"}, {"id": "model.elementary.data_monitoring_metrics", "type": "model"}, {"id": "model.elementary.schema_columns_snapshot", "type": "model"}, {"id": "model.elementary.dbt_exposures", "type": "model"}, {"id": "model.elementary.dbt_metrics", "type": "model"}, {"id": "model.elementary.alerts_dbt_models", "type": "model"}, {"id": "model.elementary.model_run_results", "type": "model"}, {"id": "model.elementary.dbt_models", "type": "model"}, {"id": "model.elementary.snapshot_run_results", "type": "model"}, {"id": "model.elementary.dbt_snapshots", "type": "model"}, {"id": "model.elementary.dbt_run_results", "type": "model"}, {"id": "model.elementary.dbt_sources", "type": "model"}, {"id": "model.elementary.filtered_information_schema_columns", "type": "model"}, {"id": "model.elementary.filtered_information_schema_tables", "type": "model"}, {"id": "source.elementary_integration_tests.validation.any_type_column_anomalies_validation", "type": "source"}, {"id": "source.elementary_integration_tests.training.any_type_column_anomalies_training", "type": "source"}, {"id": "source.elementary_integration_tests.training.string_column_anomalies_training", "type": "source"}, {"id": "source.elementary_integration_tests.training.numeric_column_anomalies_training", "type": "source"}, {"id": "source.elementary_integration_tests.schema_changes_data.groups", "type": "source"}, {"id": "source.elementary_integration_tests.schema_changes_data.stats_players", "type": "source"}, {"id": "source.elementary_integration_tests.schema_changes_data.stats_team", "type": "source"}], "edges": [["model.elementary.current_tests_run_results", "model.elementary.elementary_test_results"], ["model.elementary.current_tests_run_results", "model.elementary.dbt_tests"], ["model.elementary.alerts_anomaly_detection", "model.elementary.elementary_test_results"], ["model.elementary.alerts_dbt_tests", "model.elementary.elementary_test_results"], ["model.elementary.alerts_schema_changes", "model.elementary.elementary_test_results"], ["model.elementary.anomaly_threshold_sensitivity", "model.elementary.metrics_anomaly_score"], ["model.elementary.metrics_anomaly_score", "model.elementary.data_monitoring_metrics"], ["model.elementary.monitors_runs", "model.elementary.data_monitoring_metrics"], ["model.elementary.alerts_dbt_models", "model.elementary.model_run_results"], ["model.elementary.alerts_dbt_models", "model.elementary.snapshot_run_results"], ["model.elementary.model_run_results", "model.elementary.dbt_run_results"], ["model.elementary.model_run_results", "model.elementary.dbt_models"], ["model.elementary.snapshot_run_results", "model.elementary.dbt_run_results"], ["model.elementary.snapshot_run_results", "model.elementary.dbt_snapshots"]]}, "tracking": {"posthog_api_key": "phc_56XBEzZmh02mGkadqLiYW51eECyYKWPyecVwkGdGUfg", "report_generator_anonymous_user_id": "a2f64d4d-2dd4-4dd3-bf7a-1837e29f1437", "anonymous_warehouse_id": "d85dcf226bee445349fe2f1d0bd60c5f54f9177170087d2610569dd0f297c1a2"}}